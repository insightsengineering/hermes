% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw_boxplot.R
\name{draw_boxplot}
\alias{draw_boxplot}
\title{Boxplot for Gene Expression Values}
\usage{
draw_boxplot(
  object,
  assay_name,
  genes,
  x_var = NULL,
  color_var = NULL,
  facet_var = NULL,
  violin = FALSE,
  jitter = FALSE
)
}
\arguments{
\item{object}{(\code{AnyHermesData})\cr input.}

\item{assay_name}{(\code{string})\cr selects assay from input for the y-axis.}

\item{genes}{(\code{character})\cr gene ID(s) for which to produce boxplots.}

\item{x_var}{(\code{string} or \code{NULL})\cr optional stratifying variable for the x-axis,
taken from input sample variables.}

\item{color_var}{(\code{string} or \code{NULL})\cr optional color variable, taken from
input sample variables.}

\item{facet_var}{(\code{string} or \code{NULL})\cr optional faceting variable, taken
from input sample variables.}

\item{violin}{(\code{flag})\cr whether to draw a violin plot instead of a boxplot.}

\item{jitter}{(\code{flag})\cr whether to add jittered original data points or not.}
}
\value{
The \code{ggplot} boxplot.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This produces a boxplot of the gene expression values of a gene for a
sample variable.
}
\examples{
object <- hermes_data
draw_boxplot(
  object,
  assay_name = "counts",
  genes = genes(object)[2]
)

object2 <- object \%>\%
  add_quality_flags() \%>\%
  filter() \%>\%
  normalize()
draw_boxplot(
  object2,
  assay_name = "tpm",
  x_var = "SEX",
  genes = genes(object2)[20],
  facet_var = "RACE",
  color_var = "AGE18",
  jitter = TRUE
)

draw_boxplot(
  object,
  assay_name = "counts",
  x_var = "SEX",
  genes = genes(object)[2],
  jitter = TRUE
)

draw_boxplot(
  object,
  assay_name = "counts",
  x_var = "SEX",
  genes = genes(object)[2],
  jitter = TRUE,
  violin = TRUE
)

draw_boxplot(
  object,
  assay_name = "counts",
  x_var = "SEX",
  genes = genes(object)[1:2],
  facet_var = "RACE"
)
}
