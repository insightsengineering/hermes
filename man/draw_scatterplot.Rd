% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/draw_scatterplot.R
\name{draw_scatterplot}
\alias{draw_scatterplot}
\title{Scatterplot for Gene Expression Values}
\usage{
draw_scatterplot(
  object,
  assay_name,
  x_var,
  y_var,
  color_var = NULL,
  facet_var = NULL,
  smooth_method = c("lm", "loess", "none")
)
}
\arguments{
\item{object}{(\code{AnyHermesData})\cr input.}

\item{assay_name}{(\code{string})\cr selects assay from input.}

\item{x_var}{(\code{string})\cr gene ID for the x-axis.}

\item{y_var}{(\code{string})\cr gene ID for the y-axis.}

\item{color_var}{(\code{string} or \code{NULL})\cr optional color variable, taken
from input sample variables.}

\item{facet_var}{(\code{string} or \code{NULL})\cr optional faceting variable, taken
from input sample variables.}

\item{smooth_method}{(\code{string})\cr smoothing method to use, either linear
regression line (\code{lm}), local polynomial regression (\code{loess}) or \code{none}.}
}
\value{
The \code{ggplot} scatterplot.
}
\description{
\ifelse{html}{\out{<a href='https://www.tidyverse.org/lifecycle/#experimental'><img src='figures/lifecycle-experimental.svg' alt='Experimental lifecycle'></a>}}{\strong{Experimental}}

This produces a scatterplot of the gene expression values
of two genes.
}
\examples{
object <- HermesData(summarized_experiment)
draw_scatterplot(
  object,
  assay_name = "counts",
  facet_var = NULL,
  x_var = genes(object)[1],
  y_var = genes(object)[2],
  color = "RACE"
)

object2 <- object \%>\%
  add_quality_flags() \%>\%
  filter() \%>\%
  normalize()
draw_scatterplot(
  object2,
  assay_name = "tpm",
  facet_var = "SEX",
  x_var = genes(object2)[10],
  y_var = genes(object2)[20],
  smooth_method = "loess"
)
}
